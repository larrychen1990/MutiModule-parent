<?xml version="1.0" encoding="UTF-8"?>  
<beans xmlns="http://www.springframework.org/schema/beans"   
       xmlns:aop="http://www.springframework.org/schema/aop"   
       xmlns:tx="http://www.springframework.org/schema/tx"   
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"  
       xsi:schemaLocation="http://www.springframework.org/schema/aop   
        http://www.springframework.org/schema/aop/spring-aop-4.0.xsd   
        http://www.springframework.org/schema/beans   
        http://www.springframework.org/schema/beans/spring-beans-4.0.xsd   
        http://www.springframework.org/schema/tx   
        http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">
        
    <!-- redis 配置 -->
	<import resource="redis-config.xml"/>
        
	<!--  事务控制  begin -->
	        
    <!-- 事务相关控制 -->
	<bean name="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
	    <property name="dataSource" ref="dataSource"/>
	</bean>
 
	<!-- 基本事务定义,使用transactionManager作事务管理,默认get* find*方法的事务为readonly,其余方法按默认设置. 默认的设置请参考Spring文档事务一章. -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="find*" propagation="REQUIRED" />
			<tx:method name="get*" propagation="REQUIRED" />
			<tx:method name="query*" propagation="REQUIRED" />
			<tx:method name="generator*" propagation="REQUIRED" />
			<tx:method name="insert*" propagation="REQUIRED" />
			<tx:method name="update*" propagation="REQUIRED" />
			<tx:method name="delete*" read-only="true" />
			<tx:method name="*" read-only="false" />
		</tx:attributes>
	</tx:advice>
	
	 <!-- 以AspectJ方式 定义 AOP -->
	<aop:config proxy-target-class="true">
		<aop:advisor pointcut="execution(* com.alexgaoyh.**.service..*.*(..))" advice-ref="txAdvice" />
	</aop:config>
	
	<!--  事务控制 end -->
	
	<!-- redis 缓存控制层 begin-->
	
	<bean id="redisHandler" class="com.alexgaoyh.MutiModule.aop.redis.RedisAdvice" >
		<property name="redisTemplate" ref="redisTemplate"></property>
	</bean>
	
	<aop:config>
		<aop:aspect id="aspect" ref="redisHandler">
			<!-- 在多个表达式之间使用  || , or 表示  或 ，使用  && , and 表示  与 ， ！ 表示  非 -->
			<!-- <aop:pointcut id="pointRedisHandler" expression="execution(* com.alexgaoyh.MutiModule.service.*.*.selectByPrimaryKey(..)) 
					or execution(* com.alexgaoyh.MutiModule.service.*.*.insert(..)) "/> -->
			<aop:pointcut id="pointRedisHandler" expression="execution(* com.alexgaoyh.MutiModule.service.*.*.selectByPrimaryKey(..))"/>		
					
			<!-- <aop:before method="doBefore"  pointcut-ref="pointRedisHandler"/>
			<aop:after method="doAfter"  pointcut-ref="pointRedisHandler"/> -->
			<aop:around method="doAround"  pointcut-ref="pointRedisHandler"/>
			<!-- <aop:after-returning method="doReturn"  pointcut-ref="pointRedisHandler"/>
			<aop:after-throwing method="doThrowing" throwing="ex" pointcut-ref="pointRedisHandler"/> -->
			
		</aop:aspect>
		
		<aop:aspect id="aspectUpdeteModel" ref="redisHandler">
			<aop:pointcut id="pointRedisUpdateModelHandler" expression="execution(* com.alexgaoyh.MutiModule.service.*.*.updateByPrimaryKeySelective(..))"/>		
					
			<aop:around method="doUpdateModel"  pointcut-ref="pointRedisUpdateModelHandler"/>
		</aop:aspect>
	</aop:config>
	
	<!-- redis 缓存控制层 end-->
	
	<!-- 以下部分为添加新的service方法后，手动添加的部分 -->
	
	<bean id="demoService" class="com.alexgaoyh.MutiModule.service.demo.impl.DemoServiceImpl">
		<property name="demoMapper" ref="demoMapper" />
	</bean>
	
	<bean id="facadeService" class="com.alexgaoyh.MutiModule.service.facade.impl.FacadeServiceImpl">
		<property name="captchaService" ref="captchaService" />
	</bean>
	
	<bean id="sysmanUserService" class="com.alexgaoyh.MutiModule.service.sysman.impl.SysmanUserServiceImpl">
		<property name="sysmanUserMapper" ref="sysmanUserMapper" />
	</bean>
	
	<bean id="sysmanRoleService" class="com.alexgaoyh.MutiModule.service.sysman.impl.SysmanRoleServiceImpl">
		<property name="sysmanRoleMapper" ref="sysmanRoleMapper" />
	</bean>
	
	<bean id="sysmanResourceService" class="com.alexgaoyh.MutiModule.service.sysman.impl.SysmanResourceServiceImpl">
		<property name="sysmanResourceMapper" ref="sysmanResourceMapper" />
	</bean>
	
	<bean id="sysmanUserRoleRelService" class="com.alexgaoyh.MutiModule.service.sysman.impl.SysmanUserRoleRelServiceImpl">
		<property name="sysmanUserRoleRelMapper" ref="sysmanUserRoleRelMapper" />
	</bean>
	
	<bean id="sysmanRoleResourceRelService" class="com.alexgaoyh.MutiModule.service.sysman.impl.SysmanRoleResourceRelServiceImpl">
		<property name="sysmanRoleResourceRelMapper" ref="sysmanRoleResourceRelMapper" />
	</bean>
	
</beans>